# Upstream definitions for load balancing
upstream fixwurx_api {
    # Use consistent hashing for sticky sessions
    hash $remote_addr consistent;
    
    # Main API server
    server fixwurx:8000 max_fails=3 fail_timeout=30s;
    
    # Add additional API servers here for horizontal scaling
    # server fixwurx_replica1:8000 max_fails=3 fail_timeout=30s;
    # server fixwurx_replica2:8000 max_fails=3 fail_timeout=30s;
}

upstream fixwurx_dashboard {
    # Use consistent hashing for sticky sessions
    hash $remote_addr consistent;
    
    # Main dashboard server
    server fixwurx:8001 max_fails=3 fail_timeout=30s;
    
    # Add additional dashboard servers here for horizontal scaling
    # server fixwurx_replica1:8001 max_fails=3 fail_timeout=30s;
    # server fixwurx_replica2:8001 max_fails=3 fail_timeout=30s;
}

# HTTP server configuration
server {
    listen 80;
    server_name fixwurx.local;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name fixwurx.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fixwurx.crt;
    ssl_certificate_key /etc/nginx/ssl/fixwurx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # API proxy
    location /api/ {
        proxy_pass http://fixwurx_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;
    }
    
    # Dashboard proxy
    location / {
        proxy_pass http://fixwurx_dashboard/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;
    }
    
    # Static files
    location /static/ {
        root /var/www;
        expires 1d;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
    
    # Error pages
    location = /50x.html {
        root /var/www;
    }
}

# Monitoring server - Prometheus
server {
    listen 443 ssl http2;
    server_name prometheus.fixwurx.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fixwurx.crt;
    ssl_certificate_key /etc/nginx/ssl/fixwurx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    location / {
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Basic authentication
        auth_basic "Prometheus Admin";
        auth_basic_user_file /etc/nginx/auth/.prometheus_htpasswd;
    }
}

# Monitoring server - Grafana
server {
    listen 443 ssl http2;
    server_name grafana.fixwurx.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fixwurx.crt;
    ssl_certificate_key /etc/nginx/ssl/fixwurx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    location / {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Tracing server - Jaeger
server {
    listen 443 ssl http2;
    server_name jaeger.fixwurx.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fixwurx.crt;
    ssl_certificate_key /etc/nginx/ssl/fixwurx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    location / {
        proxy_pass http://jaeger:16686/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
