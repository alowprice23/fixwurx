apiVersion: apps/v1
kind: Deployment
metadata:
  name: fixwurx
  labels:
    app: fixwurx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fixwurx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: fixwurx
    spec:
      containers:
      - name: fixwurx
        image: fixwurx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: fixwurx-config
              key: environment
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: fixwurx-config
              key: log_level
        - name: REDIS_HOST
          value: fixwurx-redis
        - name: REDIS_PORT
          value: "6379"
        envFrom:
        - secretRef:
            name: fixwurx-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: config-volume
        configMap:
          name: fixwurx-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: fixwurx-data-pvc
